// <auto-generated />
using System;
using AlejandroVertelPruebaReImagine.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AlejandroVertelPruebaTecnica.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AlejandroVertelPruebaReImagine.Models.Entities.DetalleDeVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<double>("PrecioUnitario")
                        .HasColumnType("double precision");

                    b.PrimitiveCollection<int[]>("ProductoId")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<double>("Total")
                        .HasColumnType("double precision");

                    b.PrimitiveCollection<int[]>("VentaId")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.ToTable("DetallesDeVenta");
                });

            modelBuilder.Entity("AlejandroVertelPruebaReImagine.Models.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("DetalleDeVentaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Precio")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("DetalleDeVentaId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("AlejandroVertelPruebaReImagine.Models.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AlejandroVertelPruebaReImagine.Models.Entities.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DetalleDeVentaId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Total")
                        .HasColumnType("double precision");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DetalleDeVentaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("AlejandroVertelPruebaReImagine.Models.Entities.Producto", b =>
                {
                    b.HasOne("AlejandroVertelPruebaReImagine.Models.Entities.DetalleDeVenta", null)
                        .WithMany("Producto")
                        .HasForeignKey("DetalleDeVentaId");
                });

            modelBuilder.Entity("AlejandroVertelPruebaReImagine.Models.Entities.Venta", b =>
                {
                    b.HasOne("AlejandroVertelPruebaReImagine.Models.Entities.DetalleDeVenta", null)
                        .WithMany("Venta")
                        .HasForeignKey("DetalleDeVentaId");

                    b.HasOne("AlejandroVertelPruebaReImagine.Models.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AlejandroVertelPruebaReImagine.Models.Entities.DetalleDeVenta", b =>
                {
                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });
#pragma warning restore 612, 618
        }
    }
}
